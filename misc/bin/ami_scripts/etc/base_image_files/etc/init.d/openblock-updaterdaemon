#!/bin/bash
# Start/stop the updaterdaemon. This is copied largely from the cron init script.
#
### BEGIN INIT INFO
# Provides:          updaterdaemon
# Required-Start:    $syslog $time
# Required-Stop:     $syslog $time
# Default-Start:     2 3 4 5
# Default-Stop:      S 0 1 6
# Short-Description: Regular background program processing daemon
# Description:       updaterdaemon is a Python cron replacement.

### END INIT INFO

#LSBNAMES='-l'  # Uncomment for LSB name support in /etc/cron.d/

### CONFIGURABLE STUFF
# Set this to the user that your openblock deployment runs as.
# TODO: The daemon itself could use setuid
SU_USER="openblock"

ERRLOGFILE=/var/log/openblock/updaterdaemon-err.log
LOGFILE=/var/log/openblock/updaterdaemon.log
VIRTUAL_ENV=/home/openblock/openblock
HERE=$VIRTUAL_ENV/lib/python2.*/site-packages/ebdata/retrieval/updaterdaemon

CONFIG_FILE=/home/openblock/scraper_config.py

### END OF CONFIGURABLE STUFF

# This only works on linux, not other unixes.
. /lib/lsb/init-functions


# Find a local python if there is one (eg. in a virtualenv).
PYTHON=$VIRTUAL_ENV/bin/python

RUNNER="$PYTHON $HERE/runner.py"

case "$1" in
start)	log_begin_msg "Starting updaterdaemon..."
        sudo -u $SU_USER $RUNNER --log-file=$LOGFILE --config=$CONFIG_FILE --error-log=$ERRLOGFILE start
        log_end_msg $?
	;;
stop)	log_begin_msg "Stopping updaterdaemon..."
        sudo -u $SU_USER $RUNNER stop
        log_end_msg $?
        ;;
restart) log_begin_msg "Restarting updaterdaemon..."
        sudo -u $SU_USER $RUNNER restart
        log_end_msg $?
        ;;
*)	log_success_msg "Usage: /etc/init.d/updaterdaemon start|stop|restart"
        exit 1 
        ;;
esac
exit 0

